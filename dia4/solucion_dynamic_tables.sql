/*DT ORDERS EN SILVER*/
CREATE OR REPLACE DYNAMIC TABLE SILVER.DT_ORDERS (ORDER_ID, SHIPPING_SERVICE, SHIPPING_COST, ADDRESS_ID, CREATED_AT, PROMO_NAME, ESTIMATED_DELIVERY_AT, ORDER_COST, USER_ID, ORDER_TOTAL, DELIVERED_AT, TRACKING_ID, STATUS, DELIVERY_TIME_HOURS)
    TARGET_LAG = DOWNSTREAM
    WAREHOUSE = WH_CURSO_DATA_ENGINEERING
    AS
SELECT
        ORDER_ID::varchar() AS ORDER_ID,
        SHIPPING_SERVICE::varchar(20) AS SHIPPING_SERVICE,
        (replace(SHIPPING_COST, ',', '.'))::decimal AS SHIPPING_COST,
        ADDRESS_ID::varchar(50) AS ADDRESS_ID,
        CREATED_AT::timestamp_ntz AS CREATED_AT,
        IFNULL(promo_id, 'N/A') AS PROMO_NAME,
        ESTIMATED_DELIVERY_AT::timestamp_ntz AS ESTIMATED_DELIVERY_AT,
        (replace(ORDER_COST, ',', '.'))::decimal AS ORDER_COST,
        USER_ID::varchar(50) AS USER_ID,
        (replace(ORDER_TOTAL, ',', '.'))::decimal AS ORDER_TOTAL,
        DELIVERED_AT::timestamp_ntz AS DELIVERED_AT,
        TRACKING_ID::varchar(50) AS TRACKING_ID,
        STATUS::varchar(20) AS STATUS,
        TIMESTAMPDIFF(HOUR, created_at, delivered_at) AS DELIVERY_TIME_HOURS
    FROM curso_data_engineering_2024.bronze.orders_hist
    QUALIFY ROW_NUMBER() OVER (PARTITION BY ORDER_ID ORDER BY CREATED_AT DESC) = 1;

select * from SILVER.DT_ORDERS;

/*DT ORDER_STATUS EN GOLD*/
CREATE OR REPLACE DYNAMIC TABLE GOLD.DT_ORDERS_STATUS (FECHA_CREACION_PEDIDO, STATUS, NUM_PEDIDOS)
    TARGET_LAG = '1 minutes'
    WAREHOUSE = WH_CURSO_DATA_ENGINEERING
    AS
        SELECT 
            TO_DATE(CREATED_AT),
            STATUS,
            COUNT(DISTINCT ORDER_ID)
        FROM 
            curso_data_engineering_2024.SILVER.DT_ORDERS
        GROUP BY    
            TO_DATE(CREATED_AT),
            STATUS;

select * from GOLD.DT_ORDERS_STATUS order by num_pedidos;

----------
----------

CREATE OR REPLACE DYNAMIC TABLE GOLD.DT_AGGR_SHIP_COST_CP (ZIPCODE, SHIPPING_COST_BY_CP)
    TARGET_LAG = '1 minutes'
    WAREHOUSE = WH_CURSO_DATA_ENGINEERING
    AS
    SELECT
        ZIPCODE,
        SUM(SHIPPING_COST)
    FROM
        SILVER.ADDRESSES AS A
    INNER JOIN
        SILVER.DT_ORDERS AS O
    ON
       A.ADDRESS_ID = O.ADDRESS_ID
    GROUP BY ZIPCODE;

select * from GOLD.DT_AGGR_SHIP_COST_CP order by zipcode;
    
CREATE OR REPLACE DYNAMIC TABLE GOLD.DT_AGGR_ORDER_COST_PRO (NAME, TOTAL_ORDER_COST)
    TARGET_LAG = '1 minutes'
    WAREHOUSE = WH_CURSO_DATA_ENGINEERING
    AS
    SELECT
        P.NAME,
        SUM(O.ORDER_COST)
    FROM
        SILVER.PRODUCTS AS P
    INNER JOIN
        SILVER.ORDER_ITEMS AS OI
    ON
        P.PRODUCT_ID = OI.PRODUCT_ID
    INNER JOIN
        SILVER.DT_ORDERS AS O
    ON
        O.ORDER_ID = OI.ORDER_ID
    WHERE
        O.STATUS = 'shipped'
    GROUP BY P.NAME;

SELECT * FROM GOLD.DT_AGGR_ORDER_COST_PRO;

show dynamic tables;

------------------
------------------

ALTER DYNAMIC TABLE SILVER.DT_ORDERS SUSPEND;
ALTER DYNAMIC TABLE GOLD.DT_ORDERS_STATUS SUSPEND;
ALTER DYNAMIC TABLE GOLD.DT_AGGR_SHIP_COST_CP SUSPEND;
ALTER DYNAMIC TABLE GOLD.DT_AGGR_ORDER_COST_PRO SUSPEND;

-- MONITORING DYNAMIC TABLES
SELECT * FROM TABLE(INFORMATION_SCHEMA.DYNAMIC_TABLE_REFRESH_HISTORY()) order by DATA_TIMESTAMP desc; 
--WHERE DATABASE_NAME = '';

drop dynamic table silver.dt_orders;
drop dynamic table GOLD.DT_ORDERS_STATUS ;
drop dynamic table GOLD.DT_AGGR_SHIP_COST_CP;
drop dynamic table GOLD.DT_AGGR_ORDER_COST_PRO;
